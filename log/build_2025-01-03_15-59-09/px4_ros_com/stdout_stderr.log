-- Found ament_cmake: 1.3.10 (/opt/ros/humble/share/ament_cmake/cmake)
-- Found builtin_interfaces: 1.2.1 (/opt/ros/humble/share/builtin_interfaces/cmake)
-- Found rosidl_generator_c: 3.1.5 (/opt/ros/humble/share/rosidl_generator_c/cmake)
-- Found rosidl_adapter: 3.1.5 (/opt/ros/humble/share/rosidl_adapter/cmake)
-- Found rosidl_generator_cpp: 3.1.5 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)
-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
-- Found eigen3_cmake_module: 0.1.1 (/opt/ros/humble/share/eigen3_cmake_module/cmake)
-- Found geometry_msgs: 4.2.4 (/opt/ros/humble/share/geometry_msgs/cmake)
-- Found px4_msgs: 2.0.1 (/home/niweiss/ws_sensor_combined/install/px4_msgs/share/px4_msgs/cmake)
-- Found rclcpp: 16.0.10 (/opt/ros/humble/share/rclcpp/cmake)
-- Found rmw_implementation_cmake: 6.1.2 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)
-- Found rmw_fastrtps_cpp: 6.2.7 (/opt/ros/humble/share/rmw_fastrtps_cpp/cmake)
-- Using RMW implementation 'rmw_fastrtps_cpp' as default
-- Found sensor_msgs: 4.2.4 (/opt/ros/humble/share/sensor_msgs/cmake)
-- Found rclpy: 3.3.14 (/opt/ros/humble/share/rclpy/cmake)
-- Found ament_lint_auto: 0.12.11 (/opt/ros/humble/share/ament_lint_auto/cmake)
-- Added test 'copyright' to check source files copyright and LICENSE
-- Added test 'cppcheck' to perform static code analysis on C / C++ code
-- Configured cppcheck include dirs: /home/niweiss/ws_sensor_combined/src/px4_ros_com/include;$<BUILD_INTERFACE:/home/niweiss/ws_sensor_combined/src/px4_ros_com/include/px4_ros_com>
-- Configured cppcheck exclude dirs and/or files: 
-- Added test 'cpplint' to check C / C++ code against the Google style
-- Configured cpplint exclude dirs and/or files: 
-- Added test 'flake8' to check Python code syntax and style conventions
-- Added test 'lint_cmake' to check CMake code style
-- Added test 'pep257' to check Python code against some of the docstring style conventions in PEP 257
-- Added test 'uncrustify' to check C / C++ code style
-- Configured uncrustify additional arguments: 
-- Added test 'xmllint' to check XML markup files
-- Configuring done
-- Generating done
-- Build files have been written to: /home/niweiss/ws_sensor_combined/build/px4_ros_com
[35m[1mConsolidate compiler generated dependencies of target offboard_paths[0m
[35m[1mConsolidate compiler generated dependencies of target offboard_control_srv[0m
[35m[1mConsolidate compiler generated dependencies of target debug_vect_advertiser[0m
[35m[1mConsolidate compiler generated dependencies of target vehicle_gps_position_listener[0m
[35m[1mConsolidate compiler generated dependencies of target offboard_control[0m
[35m[1mConsolidate compiler generated dependencies of target frame_transforms[0m
[35m[1mConsolidate compiler generated dependencies of target sensor_combined_listener[0m
[  6%] [32mBuilding CXX object CMakeFiles/offboard_launch.dir/src/examples/offboard/offboard_launch.cpp.o[0m
[ 18%] [32mBuilding CXX object CMakeFiles/offboard_paths.dir/src/examples/offboard/offboard_paths.cpp.o[0m
[ 18%] Built target ament_cmake_python_copy_px4_ros_com
[ 25%] Built target offboard_control
[ 37%] Built target offboard_control_srv
[ 50%] Built target debug_vect_advertiser
[ 62%] Built target vehicle_gps_position_listener
[ 75%] Built target sensor_combined_listener
[ 87%] Built target frame_transforms
running egg_info
writing px4_ros_com.egg-info/PKG-INFO
writing dependency_links to px4_ros_com.egg-info/dependency_links.txt
writing top-level names to px4_ros_com.egg-info/top_level.txt
reading manifest file 'px4_ros_com.egg-info/SOURCES.txt'
writing manifest file 'px4_ros_com.egg-info/SOURCES.txt'
[ 87%] Built target ament_cmake_python_build_px4_ros_com_egg
[01m[K/home/niweiss/ws_sensor_combined/src/px4_ros_com/src/examples/offboard/offboard_launch.cpp:[m[K In lambda function:
[01m[K/home/niweiss/ws_sensor_combined/src/px4_ros_com/src/examples/offboard/offboard_launch.cpp:80:63:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kinitial_altitude[m[Kâ€™ is not captured
   80 |                         publish_trajectory_setpoint(0.0, 0.0, [01;31m[Kinitial_altitude[m[K);
      |                                                               [01;31m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/niweiss/ws_sensor_combined/src/px4_ros_com/src/examples/offboard/offboard_launch.cpp:68:44:[m[K [01;36m[Knote: [m[Kthe lambda has no capture-default
   68 |                 auto timer_callback = [this[01;36m[K][m[K() -> void {
      |                                            [01;36m[K^[m[K
[01m[K/home/niweiss/ws_sensor_combined/src/px4_ros_com/src/examples/offboard/offboard_launch.cpp:58:31:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kfloat initial_altitude[m[Kâ€™ declared here
   58 |         OffboardControl([01;36m[Kfloat initial_altitude[m[K) : Node("drone_launch") // initialize node (base class constructor)
      |                         [01;36m[K~~~~~~^~~~~~~~~~~~~~~~[m[K
[01m[K/home/niweiss/ws_sensor_combined/src/px4_ros_com/src/examples/offboard/offboard_launch.cpp:[m[K At global scope:
[01m[K/home/niweiss/ws_sensor_combined/src/px4_ros_com/src/examples/offboard/offboard_launch.cpp:150:6:[m[K [01;31m[Kerror: [m[Kno declaration matches â€˜[01m[Kvoid OffboardControl::publish_trajectory_setpoint(float, float, float)[m[Kâ€™
  150 | void [01;31m[KOffboardControl[m[K::publish_trajectory_setpoint(float x, float y, float z)
      |      [01;31m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/niweiss/ws_sensor_combined/src/px4_ros_com/src/examples/offboard/offboard_launch.cpp:105:14:[m[K [01;36m[Knote: [m[Kcandidate is: â€˜[01m[Kvoid OffboardControl::publish_trajectory_setpoint()[m[Kâ€™
  105 |         void [01;36m[Kpublish_trajectory_setpoint[m[K();
      |              [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/niweiss/ws_sensor_combined/src/px4_ros_com/src/examples/offboard/offboard_launch.cpp:55:7:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kclass OffboardControl[m[Kâ€™ defined here
   55 | class [01;36m[KOffboardControl[m[K : public rclcpp::Node // new class that inherits from ROS 2 node class
      |       [01;36m[K^~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33[m[K,
                 from [01m[K/usr/include/c++/11/bits/allocator.h:46[m[K,
                 from [01m[K/usr/include/c++/11/unordered_map:40[m[K,
                 from [01m[K/usr/include/c++/11/functional:61[m[K,
                 from [01m[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13[m[K,
                 from [01m[K/usr/include/c++/11/algorithm:74[m[K,
                 from [01m[K/home/niweiss/ws_sensor_combined/install/px4_msgs/include/px4_msgs/px4_msgs/msg/detail/offboard_control_mode__struct.hpp:8[m[K,
                 from [01m[K/home/niweiss/ws_sensor_combined/install/px4_msgs/include/px4_msgs/px4_msgs/msg/offboard_control_mode.hpp:7[m[K,
                 from [01m[K/home/niweiss/ws_sensor_combined/src/px4_ros_com/src/examples/offboard/offboard_launch.cpp:41[m[K:
/usr/include/c++/11/ext/new_allocator.h: In instantiation of â€˜[01m[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = OffboardControl; _Args = {}; _Tp = OffboardControl][m[Kâ€™:
[01m[K/usr/include/c++/11/bits/alloc_traits.h:516:17:[m[K   required from â€˜[01m[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = OffboardControl; _Args = {}; _Tp = OffboardControl; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<OffboardControl>][m[Kâ€™
[01m[K/usr/include/c++/11/bits/shared_ptr_base.h:519:39:[m[K   required from â€˜[01m[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {}; _Tp = OffboardControl; _Alloc = std::allocator<OffboardControl>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[01m[K/usr/include/c++/11/bits/shared_ptr_base.h:650:16:[m[K   required from â€˜[01m[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = OffboardControl; _Alloc = std::allocator<OffboardControl>; _Args = {}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[01m[K/usr/include/c++/11/bits/shared_ptr_base.h:1342:14:[m[K   required from â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<OffboardControl>; _Args = {}; _Tp = OffboardControl; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[01m[K/usr/include/c++/11/bits/shared_ptr.h:409:59:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<OffboardControl>; _Args = {}; _Tp = OffboardControl][m[Kâ€™
[01m[K/usr/include/c++/11/bits/shared_ptr.h:862:14:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = OffboardControl; _Alloc = std::allocator<OffboardControl>; _Args = {}][m[Kâ€™
[01m[K/usr/include/c++/11/bits/shared_ptr.h:878:39:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = OffboardControl; _Args = {}][m[Kâ€™
[01m[K/home/niweiss/ws_sensor_combined/src/px4_ros_com/src/examples/offboard/offboard_launch.cpp:185:48:[m[K   required from here
[01m[K/usr/include/c++/11/ext/new_allocator.h:162:11:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KOffboardControl::OffboardControl()[m[Kâ€™
  162 |         { [01;31m[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)[m[K; }
      |           [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/niweiss/ws_sensor_combined/src/px4_ros_com/src/examples/offboard/offboard_launch.cpp:58:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KOffboardControl::OffboardControl(float)[m[Kâ€™
   58 |         [01;36m[KOffboardControl[m[K(float initial_altitude) : Node("drone_launch") // initialize node (base class constructor)
      |         [01;36m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/niweiss/ws_sensor_combined/src/px4_ros_com/src/examples/offboard/offboard_launch.cpp:58:9:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
gmake[2]: *** [CMakeFiles/offboard_launch.dir/build.make:76: CMakeFiles/offboard_launch.dir/src/examples/offboard/offboard_launch.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:310: CMakeFiles/offboard_launch.dir/all] Error 2
gmake[1]: *** Waiting for unfinished jobs....
[ 93%] [32m[1mLinking CXX executable offboard_paths[0m
[ 93%] Built target offboard_paths
gmake: *** [Makefile:146: all] Error 2
